# Hibernate config
# Hibernate ddl auto (create, create-drop, update, validate, none): with "update" the database schema will be automatically updated accordingly to java entities found in the project
spring.jpa.hibernate.ddl-auto=update
spring.jpa.generate-ddl=true
spring.jpa.database=MYSQL
# Show or not log for each sql query
spring.jpa.show-sql=true
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.format_sql=true
spring.datasource.validation-query=SELECT 1
spring.datasource.test-on-borrow=false
spring.datasource.test-on-return=false

# JDBC Connection url for the database
spring.datasource.url=jdbc:log4jdbc:mysql://localhost:3306/howling?useUnicode=true&charaterEncoding=utf-8
spring.datasource.username=howling
spring.datasource.password=libqa2014
spring.datasource.driverClassName=net.sf.log4jdbc.sql.jdbcapi.DriverSpy

# message
howling.hello.message=[develop mode] Hello libqa.com!
# view Resolver cache config
environment.viewResolver.cached=false

# ===============================
# = Thymeleaf configurations
# ===============================
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.cache=false

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
spring.queries.users-query=select email, password, active from user where email=?
spring.queries.roles-query=select u.email, r.role from user u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.email=?


# log level config
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=INFO